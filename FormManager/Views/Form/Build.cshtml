@model FormManager.Models.Form

@{
    ViewBag.Title = "Build";
}

<h3>Mobile Form Builder</h3>

<div class="container" ng-app="formBuilderApp">

    <div class="row">

        

        <hr />

        <div ng-controller="FormCtrl">
            <button class="btn btn-success" ng-click="saveForm()">Save Changes</button> 
            <button class="btn btn-warning" ng-click="copyForm()">Create A Copy of This Form</button>
            <hr/>
            
            <div class="form-group">
                <label>Form name</label>

                <input type="text" class="form-control" placeholder="Name" ng-model="formViewModel.Name" /><br/>

                <label><input type="checkbox" ng-model="formViewModel.IsActive">Active</label><br>

            </div>
                <div class="form-group">
                    <label>Description</label>
                    
                    <textarea type="text" class="form-control" placeholder="Description" ng-model="formViewModel.Description" rows="5"></textarea>


                </div>
                <hr/>
          
                <div ng-repeat="question in formViewModel.Questions">
                    <div class="form-group">
                        <label>Question {{$index + 1}} - {{question.Description}}</label> | <button class="btn btn-danger" ng-click="removeQuestion($index)">Remove</button>
                        <hr />
                        <textarea type="text" class="form-control" placeholder="Enter Question" ng-model="question.Description" rows="5"></textarea>
                        <hr/>
                        <label>Script</label>
                        <textarea type="text" class="form-control" placeholder="Enter Script" ng-model="question.Script" rows="5"></textarea>

                        <label>Choose Color</label>
                        <select class="form-control" ng-model="question.Color">
                            <option value="#ffffff">Default</option>>
                            <option style="color:#8080ff" value="#8080ff">Purple</option>
                            <option style="color:#64cc00" value="#64cc00">Green</option>
                            <option style="color:#ffef99" value="#ffef99">Gold</option>
                            <option style="color:#e19d9d" value="#e19d9d">Red</option>
                        </select>
                    </div>
                    <hr />
                    <button class="btn btn-info" ng-click="addAnswer($index)">Add Answer</button>
                    <hr />
                    <fieldset data-ng-repeat="answer in question.Answers" class="form-group">
                        <input class="form-control col-md-3" type="text" ng-model="answer.Description" name="" placeholder="Enter Answer Text">
                        <select class="form-control col-md-1" ng-model="answer.NextQuestionId" ng-options="q.Id as q.Description for q in formViewModel.Questions">
                            @*<option>Mobile option</option>>
                        <option>Office</option>
                        <option>Home</option>*@
                        </select>
                        <button class="btn btn-danger" ng-click="removeAnswer($parent.$index,$index)">x</button>
                    </fieldset>

                </div>
                <hr />
                <button class="btn btn-info" ng-click="addQuestion()">New Question</button>
                <hr />


                
            </div>

    </div>

</div>




@section Scripts {
    @Scripts.Render("~/Scripts/angular.js")

    <script>
        var app = angular.module('formBuilderApp', []);

        var formViewModel = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(this.Model));

        app.value("formViewModel",formViewModel);

        app.controller('FormCtrl', function ($scope,$http, formViewModel) {

            $scope.formViewModel=formViewModel;
           
            $scope.saveForm=function () {
               
                $http.post('/Form/Update', $scope.formViewModel).
                      success(function(data, status, headers, config) {
                          alert("Form Saved");
                          // this callback will be called asynchronously
                          // when the response is available
                      }).
                      error(function(data, status, headers, config) {
                          //alert("failure");
                          // called asynchronously if an error occurs
                          // or server returns response with an error status.
                      });
                
            };

            $scope.copyForm=function () {
               
                $http.post('/Form/CopyForm', $scope.formViewModel).
                      success(function(data, status, headers, config) {
                          alert("Form Copied");
                          // this callback will be called asynchronously
                          // when the response is available
                      }).
                      error(function(data, status, headers, config) {
                          //alert("failure");
                          // called asynchronously if an error occurs
                          // or server returns response with an error status.
                      });
                
            };

            $scope.addQuestion = function () {

                var newQuestion={
                    Id: 0,
                    Description: "Enter Question",
                    Answers:[{
                        Id: 0,
                        Description: "Enter Answer",
                        NextQuestionId: 0
                    }]
                };
                $scope.formViewModel.Questions.push(newQuestion);
            };

            $scope.removeQuestion = function (index) {
                $scope.formViewModel.Questions.splice(index);
            };

            $scope.addAnswer = function (index) {
                //var newAnswer = $scope.choices.length + 1;

                var newAnswer={
                    Id: 0,
                    Description: "Enter Answer",
                    NextQuestionId: 0
                }
                $scope.formViewModel.Questions[index].Answers.push(newAnswer);
            };

            $scope.removeAnswer = function (questionIndex,answerIndex) {
                $scope.formViewModel.Questions[questionIndex].Answers.splice(answerIndex);
            };

        });
    </script>
}